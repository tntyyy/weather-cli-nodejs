import { getKeyValue, TOKENDICTIONARY } from '../storage/storage.service.js';
import axios from 'axios';

export const getIcon = icon => {
  switch (icon.slice(0, -1)) {
    case '01':
      return '‚òÄÔ∏è';
    case '02':
      return 'üå§Ô∏è';
    case '03':
      return '‚òÅÔ∏è';
    case '04':
      return '‚òÅÔ∏è';
    case '09':
      return 'üåßÔ∏è';
    case '10':
      return 'üå¶Ô∏è';
    case '11':
      return 'üå©Ô∏è';
    case '13':
      return '‚ùÑÔ∏è';
    case '50':
      return 'üå´Ô∏è';
  }
};

export const getWeather = async city => {
  try {
    const token = process.env.TOKEN ?? (await getKeyValue(TOKENDICTIONARY.token));

    if (!token) {
      throw new Error('–ù–µ –∑–∞–¥–∞–Ω –∫–ª—é—á API, –∑–∞–¥–∞–π—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É -t [API_KEY]');
    }

    const { data } = await axios.get('https://api.openweathermap.org/data/2.5/weather', {
      params: {
        q: city,
        appid: token,
        lang: 'ru',
        units: 'metric',
      },
    });

    return data;
  } catch(e) {
    // error catching
  }
};
